{"version":3,"sources":["components/UserCard.js","context/UserContext.js","components/Repos.js","pages/Home.js","pages/SignIn.js","pages/SignUp.js","pages/PageNotFound.js","layout/Footer.js","layout/Header.js","App.js","config/firebaseConfig.js","serviceWorker.js","index.js"],"names":["UserCard","user","Card","className","src","avatar_url","alt","login","CardBody","class","name","location","bio","hireable","followers","UserContext","createContext","Repos","url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","language","description","private","updated_at","Home","context","useContext","query","setQuery","setUser","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","color","onClick","repos_url","to","SignIn","email","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","SignUp","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf9b1020.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Card,\n    CardBody\n} from \"reactstrap\"\n\n\nconst UserCard = ({ user }) => {\n    return (\n        <Card className=\"text-center mt-3 mb-4\">\n            <img src={user.avatar_url} alt={user.login} className=\"img-thumbnail\" />\n            <CardBody>\n                <div class=\"text-primary\">{user.name}</div>\n                <div class=\"text-primary\">{user.location}</div>\n                <div class=\"text-primary\">{user.bio}</div>\n                <div class=\"text-info\">Available for hire: {user.hireable ? \"YES\" : \"NOPE\"}</div>\n                <div class=\"text-info\">Followers {user.followers}</div>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default UserCard","import { createContext } from 'react';\n\nexport const UserContext = createContext()","import React, { useState, useEffect } from 'react';\nimport Axios from \"axios\"\nimport {\n    ListGroup,\n    ListGroupItem\n} from \"reactstrap\"\n\nconst Repos = ({ url }) => {\n    const [repos, setRepos] = useState([])\n    const fetchRepos = async () => {\n        const { data } = await Axios.get(url)\n        setRepos(data)\n    }\n\n    useEffect(() => {\n        fetchRepos()\n    }, [url])\n\n    return (\n\n        <ListGroup>\n            {repos.map(repo => (\n                <ListGroupItem key={repo.id}>\n                    <div class=\"text-primary\">{repo.name}</div>\n                    <div class=\"text-secondary\">{repo.language}</div>\n                    <div class=\"text-info\">{repo.description}</div>\n                    <div class=\"text-info\">{repo.private}</div>\n                    <div class=\"text-info\">{repo.updated_at}</div>\n                </ListGroupItem>\n            ))}\n        </ListGroup>\n\n    )\n\n}\n\nexport default Repos","import React, { useContext, useState } from 'react';\nimport Axios from \"axios\"\nimport {\n    Container,\n    Col,\n    Row,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    Button\n} from \"reactstrap\"\nimport UserCard from \"../components/UserCard\"\nimport { Redirect } from \"react-router-dom\"\nimport { UserContext } from \"../context/UserContext\"\nimport { toast } from \"react-toastify\"\nimport Repos from '../components/Repos';\n\nconst Home = () => {\n\n    const context = useContext(UserContext)\n    const [query, setQuery] = useState('')\n    const [user, setUser] = useState(null)\n\n    const fetchDetails = async () => {\n\n        try {\n            const { data } = await Axios.get(`https://api.github.com/users/${query}`)\n            setUser(data)\n            console.log({ data })\n        }\n        catch{\n            toast(\"Not able to locate user\", { type: \"error\" })\n        }\n    }\n\n    // put any page behind login\n    if (!context.user?.uid) {\n        return <Redirect to=\"/signin\" />\n    }\n\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n                <Col md=\"5\">\n                    <InputGroup>\n                        <Input\n                            type=\"text\"\n                            value={query}\n                            onChange={e => setQuery(e.target.value)}\n                            placeholder=\"Please provide the username\"\n                        />\n                        <InputGroupAddon addonType=\"append\">\n                            <Button color=\"info\" onClick={fetchDetails}>Fetch User</Button>\n                        </InputGroupAddon>\n                    </InputGroup>\n                    {user ? <UserCard user={user} /> : null}\n                </Col>\n                <Col md=\"7\">\n                    {user ? <Repos url={user.repos_url} /> : null}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Home","import React, { useContext, useState } from 'react';\nimport {\n    Container,\n    Form,\n    Button,\n    FormGroup,\n    Label,\n    Col,\n    Input,\n    Row,\n    Card,\n    CardBody,\n    CardHeader,\n    CardFooter\n} from \"reactstrap\"\nimport firebase from \"firebase/app\"\nimport { UserContext } from \"../context/UserContext\"\nimport { Redirect } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\n\nconst SignIn = () => {\n\n    const context = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleSignIn = () => {\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then(res => {\n                console.log(\"login success\" + res);\n                context.setUser({ email: res.user.email, uid: res.user.uid, password })\n                toast(\"Login Successful\", {\n                    type: \"success\"\n                })\n            })\n            .catch(error => {\n                console.log(error)\n                toast(error.message, {\n                    type: \"error\"\n                })\n            })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        handleSignIn();\n    }\n\n    if (context.user?.uid) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <Container className='text-center'>\n            <Row>\n                <Col lg={6} className='offset-lg-3 mt-5'>\n                    <Card>\n                        <Form onSubmit={handleSubmit}>\n                            <CardHeader className=''>SignIn here</CardHeader>\n                            <CardBody>\n                                <FormGroup row>\n                                    <Label for='email' sm={3}>\n                                        Email\n\t\t\t\t\t\t\t\t\t</Label>\n                                    <Col sm={9}>\n                                        <Input\n                                            type='email'\n                                            name='email'\n                                            id='email'\n                                            placeholder='provide your email'\n                                            value={email}\n                                            onChange={e => setEmail(e.target.value)}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for='password' sm={3}>\n                                        Password\n\t\t\t\t\t\t\t\t\t</Label>\n                                    <Col sm={9}>\n                                        <Input\n                                            type='password'\n                                            name='password'\n                                            id='password'\n                                            placeholder='your password here'\n                                            value={password}\n                                            onChange={e => setPassword(e.target.value)}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                            </CardBody>\n                            <CardFooter>\n                                <Button type='submit' block color='primary'>\n                                    Sign In\n\t\t\t\t\t\t\t\t</Button>\n                            </CardFooter>\n                        </Form>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default SignIn","import React, { useContext, useState } from 'react';\nimport {\n    Container,\n    Form,\n    Button,\n    FormGroup,\n    Label,\n    Col,\n    Input,\n    Row,\n    Card,\n    CardBody,\n    CardHeader,\n    CardFooter\n} from \"reactstrap\"\n\nimport firebase from \"firebase/app\"\nimport { UserContext } from \"../context/UserContext\"\nimport { Redirect } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\n\nconst SignUp = () => {\n\n    const context = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleSignUp = () => {\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(res => {\n                console.log(res)\n                context.setUser({ email: res.user.email, uid: res.user.uid, password })\n            })\n            .catch(error => {\n                console.log(error)\n                toast(error.message, {\n                    type: \"error\"\n                })\n            })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        handleSignUp()\n    }\n\n    if (context.user?.uid) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <Container className='text-center'>\n            <Row>\n                <Col lg={6} className='offset-lg-3 mt-5'>\n                    <Card>\n                        <Form onSubmit={handleSubmit}>\n                            <CardHeader className=''>SignUp here</CardHeader>\n                            <CardBody>\n                                <FormGroup row>\n                                    <Label for='email' sm={3}>\n                                        Email\n\t\t\t\t\t\t\t\t\t</Label>\n                                    <Col sm={9}>\n                                        <Input\n                                            type='email'\n                                            name='email'\n                                            id='email'\n                                            placeholder='provide your email'\n                                            value={email}\n                                            onChange={e => setEmail(e.target.value)}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for='password' sm={3}>\n                                        Password\n\t\t\t\t\t\t\t\t\t</Label>\n                                    <Col sm={9}>\n                                        <Input\n                                            type='password'\n                                            name='password'\n                                            id='password'\n                                            placeholder='your password here'\n                                            value={password}\n                                            onChange={e => setPassword(e.target.value)}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                            </CardBody>\n                            <CardFooter>\n                                <Button type='submit' block color='primary'>\n                                    Sign Up\n\t\t\t\t\t\t\t\t</Button>\n                            </CardFooter>\n                        </Form>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default SignUp","import React from 'react';\n\nconst PageNotFound = () => {\n\n    return (\n        <div>\n            <h1>PageNotFound Page</h1>\n        </div>\n    )\n}\n\nexport default PageNotFound","import React from 'react';\nimport { Container } from 'reactstrap';\n\nconst Footer = () => {\n    return (\n        <Container fluid tag=\"footer\" className=\"text-center bg-info text-white text-uppercase fixed-bottom p3\">\n            STJ Github search app with firebase\n        </Container>\n    )\n}\n\nexport default Footer","import React, { useState, useContext } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    NavbarText,\n    NavLink\n} from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\nimport { UserContext } from \"../context/UserContext\"\n\nconst Header = () => {\n    const context = useContext(UserContext)\n    const [isOpen, setIsOpen] = useState(false)\n    const toggle = () => setIsOpen(!isOpen)\n\n    return (\n        <Navbar color=\"info\" light expand=\"md\">\n            <NavbarBrand> <Link to=\"/\" className=\"text-white\" > STJ Git fire App</Link> </NavbarBrand>\n            <NavbarText className=\"text-white\">{\n                context.user?.email ? context.user.email : \"\"\n            }\n            </NavbarText>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar >\n                <Nav className=\"ml-auto\" navbar>\n                    {\n                        context.user ? (\n                            <NavItem>\n                                <NavLink onClick={() => { context.setUser(null) }} className=\"text-white\"> Logout </NavLink>\n                            </NavItem>\n                        ) : (\n                                <>\n                                    <NavItem>\n                                        <NavLink tag={Link} to=\"/signin\" className=\"text-white\"> SignIn </NavLink>\n                                    </NavItem>\n                                    <NavItem>\n                                        <NavLink tag={Link} to=\"/signup\" className=\"text-white\"> SignUp </NavLink>\n                                    </NavItem>\n                                </>\n                            )\n                    }\n                </Nav>\n            </Collapse>\n        </Navbar>\n    )\n}\n\nexport default Header","import React, { useState } from 'react';\nimport './App.css';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n// React Router\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\nimport { ToastContainer } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.min.css\"\n\nimport firebase from \"firebase/app\"\nimport \"firebase/auth\"\n\nimport { } from \"reactstrap\"\nimport Home from \"./pages/Home\"\nimport SignIn from \"./pages/SignIn\"\nimport SignUp from \"./pages/SignUp\"\nimport PageNotFound from \"./pages/PageNotFound\"\nimport { UserContext } from './context/UserContext';\nimport Footer from './layout/Footer';\nimport Header from './layout/Header';\nimport firebaseConfig from './config/firebaseConfig';\n\n// init firebase\nfirebase.initializeApp(firebaseConfig)\n\nfunction App() {\n\n  const [user, setUser] = useState(null)\n\n  return (\n\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{ user, setUser }}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"*\" component={PageNotFound} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n\n  );\n}\n\nexport default App;\n","export default {\n    apiKey: \"AIzaSyCHJG-p9evhcYK61a8hDIoUdQc6h0D9OIs\",\n    authDomain: \"mygitapp-2b2db.firebaseapp.com\",\n    databaseURL: \"https://mygitapp-2b2db.firebaseio.com\",\n    projectId: \"mygitapp-2b2db\",\n    storageBucket: \"mygitapp-2b2db.appspot.com\",\n    messagingSenderId: \"372542575613\",\n    appId: \"1:372542575613:web:56a4e515cdfb2b4a54ff94\",\n    measurementId: \"G-MFH9D6H0RD\"\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}